#include <stdio.h>
#include <ctype.h>
#include <string.h>
#define NKEYS (sizeof keytab/sizeof keytab[0])
#define BUFSIZE 100
#define MAXLEN 100
struct key{
  char *word;
  int count;
}keytab[]={
  {"auto",0},
  {"break",0},
  {"case",0},
  {"default",0}
};
char buf[BUFSIZE];
int bufp=0;
int getch(void){
  return (bufp>0)?buf[--bufp]:getchar();
}
void ungetch(char c){
  if(bufp>=BUFSIZE) printf("ungetch:too many characters\n");
  else buf[bufp++]=c;
}
int getword(char *,int);
int binSearch(char *,struct key *,int);
void main(){
  int n;
  int i;
  char c;
  char word[MAXLEN];
  while((c=getword(word,MAXLEN))!=EOF)
  if(isalpha(c))
  if((n=binSearch(word,keytab,NKEYS))>=0)
  keytab[n].count++;

  for(i=0;i<NKEYS;i++)
  if(keytab[i].count>0) printf("%d %s\n",keytab[i].count,keytab[i].word);

}
int getword(char *word,int lim){
  char *w=word;
  char c;
  while(isspace(c=getch())) ;
  if(c!=EOF) *w++=c;
  if(!isalpha(c)){  //not a alpha,return self,prog end
   *w=0;  
  return c;
}
  for(;--lim>0;w++)
  if(!isalnum(*w=getch())) {
  ungetch(*w);
  break;
}
  *w='\0';
  return word[0];
}

int binSearch(char *word,struct key keytab[],int n){
  int high,low,mid;
  low=0;
  high=n-1;
  while(low<=high){
  mid=(high+low)/2;
  if(strcmp(word,keytab[mid].word)<0) high=mid-1;
  else if(strcmp(word,keytab[mid].word)>0) low=mid+1;
  else return mid;
}
  return -1;
}
